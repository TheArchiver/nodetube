LIVESTREAM_APP=false
FILE_HOST=false
FRONTEND=true

UPLOADS_ON=true

RUN_NGROK=true

CACHING_ON=true
LOG_CACHING=false

## FRONTEND SETTINGS ##
# endpoint to hit during uploads
UPLOAD_URL='/upload'

# set where the files themselves will be served from (/uploads is for serving from local machine)
UPLOAD_SERVER='/uploads'

FORGOT_PASSWORD_EMAIL_FUNCTIONALITY_ON='true'
CONFIRM_USER_EMAIL_FUNCTIONALITY_ON='true'

## CACHING SETTINGS ##
CACHING_ON=true

CACHE_INTERVAL_IN_MINUTES=5

# custom fraud detection module
CUSTOM_FRAUD_DETECTION=false

# meta tags
META_DESCRIPTION='NodeTube - An open source file hosting platform built on NodeJS'	
# META_IMAGE='https://path.to/image.jpg'

# serve from files that are saved locally
LOCAL_BACKUP_ON='false'
LOCAL_BACKUP_DIRECTORY=''


SHOW_LOG_LOCATION=false


## FILEHOST SETTINGS ##
SAVE_AND_SERVE_FILES='true'

SAVE_AND_SERVE_FILES_DIRECTORY='./uploads'

# sets the thumbnail server that will be posted to during editing of thumbnails for uploads and user ( to separate file hosting from the frontend)
# if this is an empty string it will use the local route (aka api/upload/${upload.uniqueTag}/edit )
THUMBNAIL_SERVER=

# sets the frontend server for a user to be redirected to after they have edited a thumbnail
# if this is an empty string it will use the local route
FRONTEND_SERVER=''

ALLOW_COR='false'

# upload files to B2 hosting
UPLOAD_TO_B2=false

# mail listening scripts
EMAIL_LISTENER_ON=false
SAVE_SEEN_EMAILS=false

## TECHNICAL ITEMS ##

MONGOOSE_DEBUG=off

NODE_ENV='development'

# set web_concurrency for cluster API (livestream server should only equal 1, otherwise websockets don't work)
WEB_CONCURRENCY=1

# incomplete #
CURRENT_UPLOAD_SERVER='uploads3'

## WIDGETS ##
RECAPTCHA_ON=false

GOOGLE_ANALYTICS_ON=false

COINHIVE_ON=false

ZOPIM_ON=true

RESTRICT_UNTRUSTED_UPLOADS=false
# level you want to allow, order from least to most controversial allowed [SFW,NSFW,SENS]
RATING_ALLOWED=SFW
